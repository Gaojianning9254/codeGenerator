package ${package}.controller.${moduleName};

import java.util.Arrays;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.entity.${moduleName}.${className};
import ${package}.service.${moduleName}.${className}Service;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.R;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
//@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;



    @ApiOperation(value = "列表", notes = "传分页带分页，不传分页不带分页", httpMethod = "POST")
    @RequestMapping(value = "/query${className}", method = RequestMethod.POST)
    public R query${className}(@RequestBody ${className} ${classname}, HttpServletRequest request) {
##        Long companyNum = getCompanyNum(request);
//        Long companyNum = 900000001L;
##        ydActivityLog.setCompanyNum(companyNum);
##        if (ydActivityLog.getLotteryStatus() != null && ydActivityLog.getLotteryStatus() == -1) {
##            ydActivityLog.setLotteryStatus(null);
##        }
        //判断分页
        if (entity.getPageNum() == 0) {
            List<${className}> listResult = ${classname}Service.query${className}(${classname}, 1, 0, false).getList();
            return R.ok().put("result", listResult);
        } else {
            PageInfo<${className}> pageResult = ${classname}Service.query${className}(${classname}, ${classname}.getPageNum(), ${classname}.getPageSize(), true);
            return R.ok().put("result", pageResult);
        }
    }


    @ApiOperation(value = "修改单表)", notes = "修改单表", httpMethod = "POST")
    @RequestMapping(value = "/updateLotteryInfo", method = RequestMethod.POST)
    public R update${className}(@RequestBody ${className} ${classname}, HttpServletRequest request) {
            ${classname}Service.update${className}(${classname})
        return R.ok();
    }
    /**
     * 列表
     */
##    @RequestMapping("/list")
##    //@RequiresPermissions("${moduleName}:${pathName}:list")
##    public R list(@RequestParam Map<String, Object> params){
##        PageUtils page = ${classname}Service.queryPage(params);
##
##        return R.ok().put("page", page);
##    }


##    /**
##     * 信息
##     */
##    @RequestMapping("/info/{${pk.attrname}}")
##   // @RequiresPermissions("${moduleName}:${pathName}:info")
##    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
##		${className} ${classname} = ${classname}Service.getById(${pk.attrname});
##
##        return R.ok().put("${classname}", ${classname});
##    }
##
##    /**
##     * 保存
##     */
##    @RequestMapping("/save")
##   // @RequiresPermissions("${moduleName}:${pathName}:save")
##    public R save(@RequestBody ${className} ${classname}){
##		${classname}Service.save(${classname});
##
##        return R.ok();
##    }
##
##    /**
##     * 修改
##     */
##    @RequestMapping("/update")
##   // @RequiresPermissions("${moduleName}:${pathName}:update")
##    public R update(@RequestBody ${className} ${classname}){
##		${classname}Service.updateById(${classname});
##
##        return R.ok();
##    }
##
##    /**
##     * 删除
##     */
##    @RequestMapping("/delete")
##   // @RequiresPermissions("${moduleName}:${pathName}:delete")
##    public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
##		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));
##
##        return R.ok();
##    }

}
